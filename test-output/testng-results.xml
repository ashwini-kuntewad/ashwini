<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="4" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-17T14:06:38 IST" name="Suite" finished-at="2023-03-17T14:07:04 IST" duration-ms="26912">
    <groups>
    </groups>
    <test started-at="2023-03-17T14:06:38 IST" name="Test" finished-at="2023-03-17T14:07:04 IST" duration-ms="26912">
      <class name="testclass.LoginTestclass">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testclass.LoginTestclass@36902638]" started-at="2023-03-17T14:06:58 IST" name="beforeClass" finished-at="2023-03-17T14:06:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="VerifyLoginFunctionalityWithCorrectData()[pri:0, instance:testclass.LoginTestclass@36902638]" started-at="2023-03-17T14:06:58 IST" name="VerifyLoginFunctionalityWithCorrectData" finished-at="2023-03-17T14:07:03 IST" duration-ms="4786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginFunctionalityWithCorrectData -->
        <test-method is-config="true" signature="beforeMehod()[pri:0, instance:testclass.LoginTestclass@36902638]" started-at="2023-03-17T14:06:58 IST" name="beforeMehod" finished-at="2023-03-17T14:06:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehod -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testclass.LoginTestclass@36902638]" started-at="2023-03-17T14:07:03 IST" name="aftermethod" finished-at="2023-03-17T14:07:03 IST" duration-ms="863" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginFunctionalityWithCorrectData status=SUCCESS method=LoginTestclass.VerifyLoginFunctionalityWithCorrectData()[pri:0, instance:testclass.LoginTestclass@36902638] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="VerifyLoginFunctionalityWithInCorrectData()[pri:0, instance:testclass.LoginTestclass@36902638]" started-at="2023-03-17T14:07:03 IST" name="VerifyLoginFunctionalityWithInCorrectData" finished-at="2023-03-17T14:07:03 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at testclass.LoginTestclass.VerifyLoginFunctionalityWithInCorrectData(LoginTestclass.java:88)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginFunctionalityWithInCorrectData -->
        <test-method is-config="true" signature="beforeMehod()[pri:0, instance:testclass.LoginTestclass@36902638]" started-at="2023-03-17T14:07:03 IST" name="beforeMehod" finished-at="2023-03-17T14:07:03 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMehod -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult)[pri:0, instance:testclass.LoginTestclass@36902638]" started-at="2023-03-17T14:07:03 IST" name="aftermethod" finished-at="2023-03-17T14:07:04 IST" duration-ms="546" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyLoginFunctionalityWithInCorrectData status=FAILURE method=LoginTestclass.VerifyLoginFunctionalityWithInCorrectData()[pri:0, instance:testclass.LoginTestclass@36902638] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- testclass.LoginTestclass -->
      <class name="testclass.Baseclass">
        <test-method is-config="true" signature="beforeTest(java.lang.String)[pri:0, instance:testclass.Baseclass@6c64cb25]" started-at="2023-03-17T14:06:38 IST" name="beforeTest" finished-at="2023-03-17T14:06:58 IST" duration-ms="20155" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:testclass.Baseclass@6c64cb25]" started-at="2023-03-17T14:07:04 IST" name="aftertest" finished-at="2023-03-17T14:07:04 IST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- testclass.Baseclass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
